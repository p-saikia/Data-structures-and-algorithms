'''
Given a string of lowercase letters in the range ascii[a-z], determine the index of a character that can be removed to make the string a palindrome. There may be more than one solution, but any will do. If the word is already a palindrome or there is no solution, return -1. Otherwise, return the index of a character to remove.
'''

#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the palindromeIndex function below.
def palindromeIndex(s):
    if s==s[::-1]:
        return -1
    else:
        for i in range(len(s)):
            if s[i]==s[-1-i]:
                pass
            else:
                t=s[:i:]+s[i+1::]
                if t==t[::-1]:
                    return i
                    break
                else:
                    return len(s)-i-1

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input())

    for q_itr in range(q):
        s = input()

        result = palindromeIndex(s)

        fptr.write(str(result) + '\n')

    fptr.close()
